/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 10 01:32:43 GMT 2024
 */

package org.exolab.jms.tranlog;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import javax.transaction.xa.Xid;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.exolab.jms.tranlog.ExternalXid;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExternalXid_ESTest extends ExternalXid_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ExternalXid externalXid0 = new ExternalXid(2496, byteArray0, byteArray0);
      byte[] byteArray1 = new byte[8];
      ExternalXid externalXid1 = new ExternalXid(2496, byteArray1, byteArray1);
      boolean boolean0 = externalXid1.equals(externalXid0);
      assertEquals(2496, externalXid1.getFormatId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ExternalXid externalXid0 = new ExternalXid(2, byteArray0, byteArray0);
      ExternalXid externalXid1 = new ExternalXid();
      boolean boolean0 = externalXid0.equals(externalXid1);
      assertEquals(2, externalXid0.getFormatId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      byte[] byteArray0 = externalXid0.getGlobalTransactionId();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ExternalXid externalXid0 = new ExternalXid(7, byteArray0, byteArray0);
      byte[] byteArray1 = externalXid0.getGlobalTransactionId();
      assertEquals(7, byteArray1.length);
      assertEquals(7, externalXid0.getFormatId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid(292, (byte[]) null, (byte[]) null);
      byte[] byteArray0 = externalXid0.getGlobalTransactionId();
      assertEquals(292, externalXid0.getFormatId());
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      int int0 = externalXid0.getFormatId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ExternalXid externalXid0 = new ExternalXid(1339, byteArray0, byteArray0);
      int int0 = externalXid0.getFormatId();
      assertEquals(1339, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ExternalXid externalXid0 = new ExternalXid((-3237), byteArray0, byteArray0);
      int int0 = externalXid0.getFormatId();
      assertEquals((-3237), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      byte[] byteArray0 = externalXid0.getBranchQualifier();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ExternalXid externalXid0 = new ExternalXid((-1008), byteArray0, byteArray0);
      byte[] byteArray1 = externalXid0.getBranchQualifier();
      assertEquals((-1008), externalXid0.getFormatId());
      assertEquals(7, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid(0, (byte[]) null, (byte[]) null);
      byte[] byteArray0 = externalXid0.getBranchQualifier();
      assertEquals(0, externalXid0.getFormatId());
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      // Undeclared exception!
      try { 
        externalXid0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.tranlog.ExternalXid", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      // Undeclared exception!
      try { 
        externalXid0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.tranlog.ExternalXid", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExternalXid externalXid0 = null;
      try {
        externalXid0 = new ExternalXid((Xid) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.tranlog.ExternalXid", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ExternalXid externalXid0 = new ExternalXid((byte)113, byteArray0, byteArray0);
      String string0 = externalXid0.toString();
      assertEquals("xid://00000071-00000000-00000000", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      String string0 = externalXid0.toString();
      assertEquals("xid://00000000--", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = new byte[2];
      ExternalXid externalXid0 = new ExternalXid((-1657), byteArray1, byteArray0);
      externalXid0.toString();
      String string0 = externalXid0.toString();
      assertNotNull(string0);
      assertEquals("xid://fffff987-0000-", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ExternalXid externalXid0 = new ExternalXid(2496, byteArray0, byteArray0);
      byte[] byteArray1 = new byte[1];
      ExternalXid externalXid1 = new ExternalXid(2496, byteArray0, byteArray1);
      boolean boolean0 = externalXid0.equals(externalXid1);
      assertEquals(2496, externalXid1.getFormatId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = new byte[2];
      ExternalXid externalXid0 = new ExternalXid((-1657), byteArray1, byteArray0);
      ExternalXid externalXid1 = new ExternalXid(externalXid0);
      boolean boolean0 = externalXid1.equals(externalXid0);
      assertEquals((-1657), externalXid0.getFormatId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = new byte[6];
      ExternalXid externalXid0 = new ExternalXid((byte)36, byteArray0, byteArray0);
      ExternalXid externalXid1 = new ExternalXid((byte)36, byteArray1, byteArray1);
      boolean boolean0 = externalXid0.equals(externalXid1);
      assertFalse(boolean0);
      assertEquals(36, externalXid1.getFormatId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      ExternalXid externalXid1 = new ExternalXid(externalXid0);
      // Undeclared exception!
      try { 
        externalXid0.equals(externalXid1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.tranlog.ExternalXid", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      ExternalXid externalXid1 = new ExternalXid(externalXid0);
      boolean boolean0 = externalXid1.equals(externalXid0);
      assertEquals(0, externalXid1.getFormatId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ExternalXid externalXid0 = new ExternalXid((byte)113, byteArray0, byteArray0);
      ExternalXid externalXid1 = new ExternalXid((byte)113, byteArray0, byteArray0);
      boolean boolean0 = externalXid0.equals(externalXid1);
      assertEquals(113, externalXid1.getFormatId());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ExternalXid externalXid0 = new ExternalXid((byte)113, byteArray0, byteArray0);
      ExternalXid externalXid1 = new ExternalXid();
      boolean boolean0 = externalXid1.equals(externalXid0);
      assertEquals(113, externalXid0.getFormatId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      boolean boolean0 = externalXid0.equals(externalXid0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ExternalXid externalXid0 = new ExternalXid((byte)113, byteArray0, byteArray0);
      Object object0 = new Object();
      boolean boolean0 = externalXid0.equals(object0);
      assertEquals(113, externalXid0.getFormatId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid(0, (byte[]) null, (byte[]) null);
      String string0 = externalXid0.toString();
      assertEquals("xid://00000000--", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid();
      externalXid0.hashCode();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ExternalXid externalXid0 = new ExternalXid(0, (byte[]) null, (byte[]) null);
      OutputStream outputStream0 = OutputStream.nullOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(outputStream0);
      externalXid0.writeExternal(objectOutputStream0);
      assertEquals(0, externalXid0.getFormatId());
  }
}
