/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 12 06:59:37 GMT 2024
 */

package com.lts.swing.table;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.swing.table.JTableUtils;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.plaf.multi.MultiTableUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JTableUtils_ESTest extends JTableUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<Stack<JScrollPane>> vector0 = new Vector<Stack<JScrollPane>>();
      JTable jTable0 = new JTable(vector0, vector0);
      double[] doubleArray0 = new double[4];
      doubleArray0[3] = 1.0;
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertFalse(jTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][4];
      Object object0 = new Object();
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = object0;
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) (-16);
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertFalse(jTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[][] objectArray0 = new Object[8][4];
      Object[] objectArray1 = new Object[4];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray1[1] = object0;
      objectArray1[2] = objectArray1[1];
      objectArray1[3] = objectArray1[2];
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 5;
      JTableUtils.setPreferredColumnPercents2(jTable0, doubleArray0);
      assertArrayEquals(new double[] {5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JTable jTable0 = new JTable(2005, 2005);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 2632.9388269716;
      // Undeclared exception!
      try { 
        JTableUtils.setPreferredColumnPercents2(jTable0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 9 out of bounds for length 9
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      JTableUtils.setSelectedRows(jTable0, 0, 931);
      assertFalse(jTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableUtils.scrollToRow(jTable0, 2654);
      assertFalse(jTable0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("LBg63[F>vB", (-900));
      Object[][] objectArray0 = new Object[7][7];
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = (Object) styledEditorKit_FontSizeAction0;
      objectArray0[0] = objectArray1;
      JTable jTable0 = new JTable(objectArray0, objectArray0[0]);
      Vector<Object> vector0 = new Vector<Object>();
      JComboBox jComboBox0 = JTableUtils.setupComboBox(0, jTable0, (List) vector0);
      assertTrue(jComboBox0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      // Undeclared exception!
      try { 
        JTableUtils.setupDoubleClick((JTable) null, defaultEditorKit_CutAction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        JTableUtils.setupComboBox(385, (JTable) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try { 
        JTableUtils.setupComboBox((-1), jTable0, (String[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      // Undeclared exception!
      try { 
        JTableUtils.setupComboBox(127, (JTable) null, (List) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.setSelectedRows((JTable) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.setSelectedRow((JTable) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      // Undeclared exception!
      try { 
        JTableUtils.setSelectedRow(jTable0, (-268));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -268
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.setPreferredColumnPercents2((JTable) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try { 
        JTableUtils.setPreferredColumnPercents(jTable0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JTable jTable0 = new JTable();
      MultiTableUI multiTableUI0 = new MultiTableUI();
      jTable0.setUI(multiTableUI0);
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.setColumnWidth((JTable) null, 20, 20);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][4];
      Object[] objectArray1 = new Object[4];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray1[1] = objectArray1[0];
      objectArray1[2] = objectArray1[0];
      objectArray1[3] = objectArray1[1];
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      // Undeclared exception!
      try { 
        JTableUtils.setColumnWidth(jTable0, (-2073), 1975);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.scrollToCell((JTable) null, 415, 415);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JTable jTable0 = new JTable(400, 400);
      MultiTableUI multiTableUI0 = new MultiTableUI();
      jTable0.setUI(multiTableUI0);
      JScrollPane jScrollPane0 = new JScrollPane(jTable0);
      jTable0.setBounds(1, 80, 48, 3589);
      // Undeclared exception!
      try { 
        JTableUtils.scrollToCell(jTable0, 2657, 3589);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.getSelectedColumns((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.centerColumn(4, (JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try { 
        JTableUtils.centerColumn(371, jTable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 371 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      // Undeclared exception!
      try { 
        JTableUtils.setSelectedRows(jTable0, (-573), 2146792069);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -573
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JTable jTable0 = new JTable(415, 415);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 415;
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertFalse(jTable0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JTable jTable0 = new JTable(415, 415);
      double[] doubleArray0 = new double[1];
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertFalse(jTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JTable jTable0 = new JTable();
      List list0 = JTableUtils.getSelectedColumns(jTable0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][4];
      Object object0 = new Object();
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = object0;
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      // Undeclared exception!
      try { 
        JTableUtils.getSelectedColumns(jTable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 1
         //
         verifyException("javax.swing.JTable$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JTable jTable0 = new JTable(1635, 1635);
      jTable0.changeSelection(1635, 1635, false, true);
      List list0 = JTableUtils.getSelectedColumns(jTable0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JTable jTable0 = new JTable(400, 400);
      JScrollPane jScrollPane0 = new JScrollPane(jTable0);
      JTableUtils.scrollToCell(jTable0, 2657, 3589);
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[][] objectArray0 = new Object[8][4];
      Object[] objectArray1 = new Object[4];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray1[1] = object0;
      objectArray1[2] = objectArray1[1];
      objectArray1[3] = objectArray1[0];
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      JTableUtils.scrollToCell(jTable0, 1975, 5);
      assertFalse(jTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JTable jTable0 = new JTable(424, 424);
      JTableUtils.centerColumn(8, jTable0);
      JTableUtils.centerColumn(8, jTable0);
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("", 5);
      JTableUtils.DoubleClickListener jTableUtils_DoubleClickListener0 = new JTableUtils.DoubleClickListener(styledEditorKit_FontSizeAction0);
      jTableUtils_DoubleClickListener0.doubleClick();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JTable jTable0 = new JTable();
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("LBg63[F>vB", (-900));
      JTableUtils.DoubleClickListener jTableUtils_DoubleClickListener0 = new JTableUtils.DoubleClickListener(styledEditorKit_FontSizeAction0);
      jTableUtils_DoubleClickListener0.showPopup(jTable0, 1363, (-900));
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JTable jTable0 = new JTable(417, 417);
      JTableUtils.setColumnWidth(jTable0, 5, 40);
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(127, 127);
      JTable jTable0 = new JTable(defaultTableModel0);
      JTableUtils.setSelectedRow(jTable0, 127);
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JTable jTable0 = new JTable(417, 417);
      String[] stringArray0 = new String[4];
      JComboBox jComboBox0 = JTableUtils.setupComboBox(5, jTable0, stringArray0);
      assertFalse(jComboBox0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try { 
        JTableUtils.setupComboBox((-2677), jTable0, (List) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.scrollToRow((JTable) null, (-574));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JTable jTable0 = new JTable();
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      JTableUtils.setupDoubleClick(jTable0, styledEditorKit_BoldAction0);
      assertFalse(jTable0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JTableUtils jTableUtils0 = new JTableUtils();
  }
}
