/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 12 05:06:55 GMT 2024
 */

package com.liferay.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactory;
import com.liferay.util.PwdGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PwdGenerator_ESTest extends PwdGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = PwdGenerator.getSecurePassword("B<(/5X", 0, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = PwdGenerator.getSecurePassword("Length is too short", 6);
      assertEquals("Leghi ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = PwdGenerator.getSecurePassword("9m@", 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = PwdGenerator.getSecurePassword(733);
      assertEquals("06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06CIOVbhnt06C", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = PwdGenerator.getPassword("", 0, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = PwdGenerator.getPassword("com.liferay.portal.kernel.log.Jdk14LogFactoryImpl", 4);
      assertEquals("clar", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = PwdGenerator.getPassword("CV]Dbahs(Ob}`Wo`7", 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getSecurePassword("", 30, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getSecurePassword((String) null, (-3546), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getSecurePassword("0123", (-32768), true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getSecurePassword("", 399);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getSecurePassword("uHoL}", Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getSecurePassword((String) null, 3002);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getSecurePassword("com.liferay.portal.kernel.log.Jdk14LogFactoryImpl", (-1));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getSecurePassword(32767);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getSecurePassword((-846));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Random.setNextRandom(Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        PwdGenerator.getSecurePassword();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getPassword("ovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt06ciovbhnt", 32767, true);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getPassword("", 2070, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getPassword("7U:[c", Integer.MAX_VALUE, false);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getPassword((String) null, (-507), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getPassword("Xz{I", (-1), false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getPassword("mdXw@t;q", 10219);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getPassword("06CIOVbh", Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getPassword((String) null, (-1238932872));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getPassword(1640531527);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getPassword(Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getPassword(0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = (-846);
      int int1 = 10;
      PwdGenerator.getPassword(10);
      int int2 = 8;
      Log log0 = mock(Log.class, new ViolatedAssumptionAnswer());
      LogFactory logFactory0 = mock(LogFactory.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        PwdGenerator.getSecurePassword(int0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getSecurePassword(Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PwdGenerator.getPassword("06CIOVbh", 9982, true);
      // Undeclared exception!
      PwdGenerator.getSecurePassword();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PwdGenerator.getSecurePassword("6z5^'", 5792, false);
      // Undeclared exception!
      PwdGenerator.getSecurePassword("1Mor}VL|ZE1 ", 5792, false);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getPassword("06CIOVbh", (-361));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PwdGenerator pwdGenerator0 = new PwdGenerator();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      PwdGenerator.getSecurePassword("06CIOVbh", 32767);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = PwdGenerator.getPinNumber();
      assertEquals("0123", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        PwdGenerator.getPassword("", 54);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = PwdGenerator.getSecurePassword();
      assertEquals("06CIOVbh", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = PwdGenerator.getPassword();
      assertEquals("06CIOVbh", string0);
  }
}
