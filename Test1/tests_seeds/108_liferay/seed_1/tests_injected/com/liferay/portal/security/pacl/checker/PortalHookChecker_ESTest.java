/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 12 09:57:26 GMT 2024
 */

package com.liferay.portal.security.pacl.checker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.security.pacl.permission.PortalHookPermission;
import com.liferay.portal.security.pacl.ActivePACLPolicy;
import com.liferay.portal.security.pacl.InactivePACLPolicy;
import com.liferay.portal.security.pacl.checker.PortalHookChecker;
import java.util.Properties;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PortalHookChecker_ESTest extends PortalHookChecker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      PortalHookPermission portalHookPermission0 = new PortalHookPermission("hasIndexer", classLoader0, "Allowing locale ");
      // Undeclared exception!
      try { 
        portalHookChecker0.checkPermission(portalHookPermission0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      Properties properties0 = new Properties();
      InactivePACLPolicy inactivePACLPolicy0 = null;
      try {
        inactivePACLPolicy0 = new InactivePACLPolicy("d&n.SFGJ<", (ClassLoader) null, properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      BouncyCastleProvider bouncyCastleProvider0 = new BouncyCastleProvider();
      ActivePACLPolicy activePACLPolicy0 = null;
      try {
        activePACLPolicy0 = new ActivePACLPolicy("", classLoader0, bouncyCastleProvider0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      ClassLoader classLoader0 = portalHookChecker0.getPortalClassLoader();
      Properties properties0 = new Properties();
      InactivePACLPolicy inactivePACLPolicy0 = null;
      try {
        inactivePACLPolicy0 = new InactivePACLPolicy("LS\u0004", classLoader0, properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      ClassLoader classLoader0 = ClassLoader.getPlatformClassLoader();
      BouncyCastleProvider bouncyCastleProvider0 = new BouncyCastleProvider();
      ActivePACLPolicy activePACLPolicy0 = null;
      try {
        activePACLPolicy0 = new ActivePACLPolicy("Allowing Struts action path ", classLoader0, bouncyCastleProvider0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      ClassLoader classLoader0 = portalHookChecker0.getPortalClassLoader();
      BouncyCastleProvider bouncyCastleProvider0 = new BouncyCastleProvider();
      InactivePACLPolicy inactivePACLPolicy0 = null;
      try {
        inactivePACLPolicy0 = new InactivePACLPolicy((String) null, classLoader0, bouncyCastleProvider0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      PortalHookPermission portalHookPermission0 = new PortalHookPermission("service", (ClassLoader) null, (Object) null);
      // Undeclared exception!
      try { 
        portalHookChecker0.checkPermission(portalHookPermission0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      PortalHookPermission portalHookPermission0 = new PortalHookPermission("hasPortalPropertiesKey", (ClassLoader) null, (Object) null);
      // Undeclared exception!
      try { 
        portalHookChecker0.checkPermission(portalHookPermission0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      ClassLoader classLoader0 = ClassLoader.getPlatformClassLoader();
      PortalHookPermission portalHookPermission0 = new PortalHookPermission("strutsActionPath", classLoader0, "strutsActionPath");
      // Undeclared exception!
      try { 
        portalHookChecker0.checkPermission(portalHookPermission0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      PortalHookPermission portalHookPermission0 = new PortalHookPermission("servletFilters", classLoader0, portalHookChecker0);
      // Undeclared exception!
      try { 
        portalHookChecker0.checkPermission(portalHookPermission0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      Object object0 = new Object();
      PortalHookPermission portalHookPermission0 = new PortalHookPermission("service", (ClassLoader) null, object0);
      // Undeclared exception!
      try { 
        portalHookChecker0.checkPermission(portalHookPermission0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.String (java.lang.Object and java.lang.String are in module java.base of loader 'bootstrap')
         //
         verifyException("com.liferay.portal.security.pacl.checker.PortalHookChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      PortalHookPermission portalHookPermission0 = new PortalHookPermission("languagePropertiesLocale", (ClassLoader) null, (Object) null);
      // Undeclared exception!
      try { 
        portalHookChecker0.checkPermission(portalHookPermission0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.security.pacl.checker.PortalHookChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      PortalHookPermission portalHookPermission0 = new PortalHookPermission("customJspDir", classLoader0, portalHookChecker0);
      // Undeclared exception!
      try { 
        portalHookChecker0.checkPermission(portalHookPermission0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Object object0 = new Object();
      PortalHookPermission portalHookPermission0 = new PortalHookPermission("SecretKeyFactory.PBEWITHSHAAND128BITAES-CBC-BC", classLoader0, object0);
      portalHookChecker0.checkPermission(portalHookPermission0);
      assertEquals("(\"com.liferay.portal.kernel.security.pacl.permission.PortalHookPermission\" \"SecretKeyFactory.PBEWITHSHAAND128BITAES-CBC-BC\")", portalHookPermission0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PortalHookChecker portalHookChecker0 = new PortalHookChecker();
      // Undeclared exception!
      try { 
        portalHookChecker0.afterPropertiesSet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.security.pacl.checker.BaseChecker", e);
      }
  }
}
