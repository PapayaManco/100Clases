/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 12 08:02:53 GMT 2024
 */

package net.sourceforge.squirrel_sql.client.gui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import java.net.URLStreamHandler;
import net.sourceforge.squirrel_sql.client.gui.HtmlViewerPanel;
import net.sourceforge.squirrel_sql.client.gui.IHtmlViewerPanelListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.jboss.net.protocol.file.Handler;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HtmlViewerPanel_ESTest extends HtmlViewerPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.getFtpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL1);
      htmlViewerPanel0.gotoURL(uRL0);
      htmlViewerPanel0.goForward();
      assertEquals(1, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.getFtpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL1);
      htmlViewerPanel0.gotoURL(uRL0);
      htmlViewerPanel0.gotoURL(uRL1);
      htmlViewerPanel0.goBack();
      htmlViewerPanel0.goForward();
      assertEquals(2, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel((URL) null);
      htmlViewerPanel0.goBack();
      assertEquals((-1), htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel((URL) null);
      htmlViewerPanel0.getURL();
      assertEquals((-1), htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = MockURL.URL("HtmlViewerPanel.error.displayurl", "                                ", 0, "                                ", (URLStreamHandler) handler0);
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      URL uRL1 = htmlViewerPanel0.getURL();
      assertNotNull(uRL1);
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = MockURL.URL("Center", "", 92, "", (URLStreamHandler) handler0);
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      URL uRL1 = htmlViewerPanel0.getURL();
      assertNotNull(uRL1);
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel((URL) null);
      htmlViewerPanel0.getHomeURL();
      assertEquals((-1), htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = MockURL.URL("HtmlViewerPanel.error.displayurl", "                                ", 0, "                                ", (URLStreamHandler) handler0);
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      htmlViewerPanel0.getHomeURL();
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Handler handler0 = new Handler();
      URL uRL0 = MockURL.URL("~QV", "~QV", 2459, "q5~$-{HepXrU'g!Hz'", (URLStreamHandler) handler0);
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      htmlViewerPanel0.getHomeURL();
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel((URL) null);
      htmlViewerPanel0.goHome();
      // Undeclared exception!
      try { 
        htmlViewerPanel0.gotoURL(uRL0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      IHtmlViewerPanelListener iHtmlViewerPanelListener0 = mock(IHtmlViewerPanelListener.class, new ViolatedAssumptionAnswer());
      htmlViewerPanel0.addListener(iHtmlViewerPanelListener0);
      IHtmlViewerPanelListener iHtmlViewerPanelListener1 = mock(IHtmlViewerPanelListener.class, new ViolatedAssumptionAnswer());
      htmlViewerPanel0.addListener(iHtmlViewerPanelListener1);
      htmlViewerPanel0.setHomeURL(uRL0);
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      IHtmlViewerPanelListener iHtmlViewerPanelListener0 = mock(IHtmlViewerPanelListener.class, new ViolatedAssumptionAnswer());
      htmlViewerPanel0.addListener(iHtmlViewerPanelListener0);
      IHtmlViewerPanelListener iHtmlViewerPanelListener1 = mock(IHtmlViewerPanelListener.class, new ViolatedAssumptionAnswer());
      htmlViewerPanel0.addListener(iHtmlViewerPanelListener1);
      htmlViewerPanel0.refreshPage();
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel((URL) null);
      assertEquals((-1), htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
      
      htmlViewerPanel0.goHome();
      htmlViewerPanel0.goForward();
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel((URL) null);
      htmlViewerPanel0.goForward();
      assertEquals((-1), htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      htmlViewerPanel0.goBack();
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URL uRL1 = MockURL.getFileExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      htmlViewerPanel0.gotoURL(uRL1);
      htmlViewerPanel0.goBack();
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
      
      htmlViewerPanel0.gotoURL(uRL1);
      assertEquals(1, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.getFtpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL1);
      htmlViewerPanel0.gotoURL(uRL0);
      htmlViewerPanel0.goBack();
      htmlViewerPanel0.goForward();
      assertEquals(1, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel((URL) null);
      // Undeclared exception!
      try { 
        htmlViewerPanel0.gotoURL((URL) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URL == null
         //
         verifyException("net.sourceforge.squirrel_sql.client.gui.HtmlViewerPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      htmlViewerPanel0.gotoURL(uRL0);
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      htmlViewerPanel0.removeListener((IHtmlViewerPanelListener) null);
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      htmlViewerPanel0.getHomeURL();
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HtmlViewerPanel htmlViewerPanel0 = new HtmlViewerPanel(uRL0);
      URL uRL1 = htmlViewerPanel0.getURL();
      assertEquals(0, htmlViewerPanel0.get_HISTORYINDEXKEYINJECTED());
      assertNotNull(uRL1);
  }
}
