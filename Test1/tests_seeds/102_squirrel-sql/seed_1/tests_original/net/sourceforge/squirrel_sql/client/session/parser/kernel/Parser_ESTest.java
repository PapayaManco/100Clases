/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 12 02:44:14 GMT 2024
 */

package net.sourceforge.squirrel_sql.client.session.parser.kernel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.ErrorStream;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.ParserListener;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.SQLSchema;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.Scanner;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLModifyingStatement;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLSelectStatement;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLSelectStatementListener;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("WORK");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(2267);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.WeakSeparator((-1705), 18, 18);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 18 out of bounds for length 18
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ErrorStream errorStream0 = new ErrorStream();
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("\"DISTINdVr ");
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("4Qlg6>kkj@mi");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLSelectStatement sQLSelectStatement0 = new SQLSelectStatement('\uFFFF');
      errorStream0.SemErr('\uFFFF', 99999, '\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLSelectStatement0);
      boolean boolean0 = parser0.Successful();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLSelectStatement sQLSelectStatement0 = new SQLSelectStatement('\uFFFF');
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(99999);
      Parser parser0 = new Parser(scanner0, sQLSelectStatement0);
      parser0.addRootStatement(sQLModifyingStatement0);
      assertEquals(99999, sQLModifyingStatement0.getStart());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("\"DISTINCT\" ");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(498);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.Error((-1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("_TONo>Z");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(0);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      boolean boolean0 = parser0.WeakSeparator(0, 1087, 2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement((-2118));
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      String string0 = parser0.LookAheadString();
      assertEquals("\uFFFF", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement((-2118));
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      String string0 = parser0.LookAheadName();
      assertEquals("\uFFFF", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("\"DISTINCT\" ");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      parser0.parse();
      String string0 = parser0.LexString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement((-2118));
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      String string0 = parser0.LexString();
      assertEquals("\uFFFF", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("\"DISTINCT\" ");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(498);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      String string0 = parser0.LexName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement((-2118));
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      String string0 = parser0.LexName();
      assertEquals("\uFFFF", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      scanner_SBuffer0._pos = (-1);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.parse();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      File file0 = MockFile.createTempFile("u?f`'vp$a", "u?f`'vp$a");
      Scanner.FBuffer scanner_FBuffer0 = new Scanner.FBuffer(file0);
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_FBuffer0, errorStream0);
      scanner_FBuffer0._bufLen = (int) '\uFFFF';
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.parse();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Scanner$FBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(1187);
      Parser parser0 = new Parser((Scanner) null, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.addRootStatement(sQLModifyingStatement0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // internal error: recursive schema
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.addRootStatement((SQLStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("\"DISTINCT\" ");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLStatement sQLStatement0 = new SQLStatement(68);
      Parser parser0 = new Parser(scanner0, sQLStatement0);
      scanner_SBuffer0.chars = "";
      // Undeclared exception!
      try { 
        parser0.WeakSeparator(0, (-1702), (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(1187);
      Parser parser0 = new Parser((Scanner) null, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.Successful();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.SemError(115);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(18);
      Parser parser0 = new Parser((Scanner) null, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.Error(18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer(";*;");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("Drop procedure mode_decode");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ErrorStream errorStream0 = new ErrorStream();
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("COMMIT");
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement((-1809));
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.WeakSeparator(12, 12, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      File file0 = MockFile.createTempFile("sve)Y<-!", "sve)Y<-!");
      Scanner.FBuffer scanner_FBuffer0 = new Scanner.FBuffer(file0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(0);
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_FBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      boolean boolean0 = parser0.WeakSeparator((-3058), (-1), 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer(".");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.WeakSeparator(99999, (-198), 99999);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -198 out of bounds for length 18
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("End of parsing for \"");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ErrorStream errorStream0 = new ErrorStream();
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("COMMIT");
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement((-1809));
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.WeakSeparator((-931), 33, (-931));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 33 out of bounds for length 18
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("=qS;OXik");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      boolean boolean0 = parser0.Successful();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer(".");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      errorStream0.count = (-3580);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      boolean boolean0 = parser0.Successful();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("=qS;OXik");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      boolean boolean0 = parser0.WeakSeparator((-1), 3, 3);
      assertFalse(boolean0);
      
      parser0.SemError((-218));
      assertEquals(34465, sQLModifyingStatement0.getLength());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("=qS;OXik");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      parser0.SemError(89);
      assertEquals(34465, sQLModifyingStatement0.getLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      String string0 = parser0.LookAheadName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      parser0.removeSQLSelectStatementListener((SQLSelectStatementListener) null);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      parser0.addSQLSelectStatementListener((SQLSelectStatementListener) null);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      parser0.removeaddParserListener((ParserListener) null);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.addParserListener((ParserListener) null);
      // Undeclared exception!
      try { 
        parser0.parse();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("INSERT");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("=qS;OXik");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.LexString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.LexName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("=qS;OXik");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      String string0 = parser0.LookAheadString();
      assertNull(string0);
  }
}
