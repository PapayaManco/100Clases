/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 09 21:51:32 GMT 2024
 */

package net.sourceforge.squirrel_sql.client.session.parser.kernel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.ErrorStream;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.ParserListener;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.SQLSchema;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.Scanner;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLModifyingStatement;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLSelectStatement;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLSelectStatementListener;
import net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ErrorStream errorStream0 = new ErrorStream();
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("ROLLBACK");
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(886);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.WeakSeparator(99999, 99999, 18);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 99999 out of bounds for length 18
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(99999);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      boolean boolean0 = parser0.WeakSeparator(99999, 6, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer(")vyQhMv!Tnb3r>v9I;");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      errorStream0.count = (-2630);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      boolean boolean0 = parser0.Successful();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(85);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      SQLSelectStatement sQLSelectStatement0 = new SQLSelectStatement(85);
      parser0.addRootStatement(sQLSelectStatement0);
      assertFalse(sQLSelectStatement0.isRepeatable());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(34);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.Error((-858));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(99999);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.WeakSeparator(0, 0, 2326);
      parser0.SemError(2483);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(2672);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      String string0 = parser0.LookAheadString();
      assertEquals("\uFFFF", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      String string0 = parser0.LookAheadName();
      assertEquals("\uFFFF", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("6MQ");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement((-156));
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      String string0 = parser0.LexString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      String string0 = parser0.LexString();
      assertEquals("\uFFFF", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("END");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      parser0.parse();
      String string0 = parser0.LexName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("=z8@!S");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      scanner_SBuffer0._pos = (-1);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.parse();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.addRootStatement(sQLModifyingStatement0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // internal error: recursive schema
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.addRootStatement((SQLStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("DELETE");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      scanner_SBuffer0.chars = "";
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.WeakSeparator(0, '\uFFFF', (-1252));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.Successful();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.Error(12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer(";~g");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("DELETE");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLSelectStatement sQLSelectStatement0 = new SQLSelectStatement(26);
      Parser parser0 = new Parser(scanner0, sQLSelectStatement0);
      parser0.parse();
      String string0 = parser0.LexName();
      assertEquals((-25), sQLSelectStatement0.getLength());
      assertEquals("\uFFFF", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("CREATE");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer(" Drop");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("\"ROLLBACK\" ");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Scanner scanner1 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner1, (SQLSchema) null);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("=z8@!S");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(80);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      boolean boolean0 = parser0.WeakSeparator((-1), 2, 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.WeakSeparator(12, 12, 17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("\"ROLLBACK\" ");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.WeakSeparator(85, 85, 85);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 85 out of bounds for length 18
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.WeakSeparator((-28), (-28), (-28));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -28 out of bounds for length 18
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(99999);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      boolean boolean0 = parser0.Successful();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("=z8@!S");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(80);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      boolean boolean0 = parser0.Successful();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(99999);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.SemError(2483);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement('\uFFFF');
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      parser0.parse();
      parser0.SemError(99999);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(99999);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      String string0 = parser0.LookAheadName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      parser0.removeSQLSelectStatementListener((SQLSelectStatementListener) null);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLStatement sQLStatement0 = new SQLStatement(52);
      Parser parser0 = new Parser(scanner0, sQLStatement0);
      SQLSelectStatementListener sQLSelectStatementListener0 = mock(SQLSelectStatementListener.class, new ViolatedAssumptionAnswer());
      parser0.addSQLSelectStatementListener(sQLSelectStatementListener0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("x1+Rtg");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement(85);
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      ParserListener parserListener0 = mock(ParserListener.class, new ViolatedAssumptionAnswer());
      parser0.removeaddParserListener(parserListener0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("=\"D\nl z.8@!");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      parser0.addParserListener((ParserListener) null);
      // Undeclared exception!
      try { 
        parser0.parse();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("INSERT");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      parser0.parse();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer(" Alter");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.parse();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.completions.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("6MQ");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      SQLModifyingStatement sQLModifyingStatement0 = new SQLModifyingStatement((-156));
      Parser parser0 = new Parser(scanner0, sQLModifyingStatement0);
      // Undeclared exception!
      try { 
        parser0.LexString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Scanner.SBuffer scanner_SBuffer0 = new Scanner.SBuffer("END");
      ErrorStream errorStream0 = new ErrorStream();
      Scanner scanner0 = new Scanner(scanner_SBuffer0, errorStream0);
      Parser parser0 = new Parser(scanner0, (SQLSchema) null);
      // Undeclared exception!
      try { 
        parser0.LexName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.parser.kernel.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Parser parser0 = new Parser((Scanner) null, (SQLSchema) null);
      String string0 = parser0.LookAheadString();
      assertNull(string0);
  }
}
