/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 10 01:24:38 GMT 2024
 */

package fi.vtt.noen.testgen.observations.formatter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fi.vtt.noen.testgen.observations.data.Event;
import fi.vtt.noen.testgen.observations.data.ProgramRun;
import fi.vtt.noen.testgen.observations.formatter.NoenFormatter;
import java.io.FileNotFoundException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NoenFormatter_ESTest extends NoenFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter("");
      String string0 = noenFormatter0.fileNameExtension();
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      NoenFormatter noenFormatter0 = new NoenFormatter(pipedOutputStream0);
      ProgramRun programRun0 = new ProgramRun("");
      // Undeclared exception!
      try { 
        noenFormatter0.observations(programRun0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error while writing to file named 'UNKNOWN-USING GIVEN STREAM'):Pipe not connected
         //
         verifyException("fi.vtt.noen.testgen.observations.formatter.BasicFormatter$OutputBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter("org.apache.oro.io.Perl5FilenameFilter");
      ProgramRun programRun0 = new ProgramRun("org.apache.oro.io.Perl5FilenameFilter");
      programRun0.add((Event) null);
      // Undeclared exception!
      try { 
        noenFormatter0.observations(programRun0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fi.vtt.noen.testgen.observations.formatter.NoenFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter("");
      ProgramRun programRun0 = new ProgramRun("");
      Event event0 = new Event("");
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.CHINA;
      linkedList0.add(locale0);
      event0.addAttribute("", (Collection) linkedList0);
      programRun0.add(event0);
      // Undeclared exception!
      try { 
        noenFormatter0.observations(programRun0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.util.Locale cannot be cast to class java.lang.String (java.util.Locale and java.lang.String are in module java.base of loader 'bootstrap')
         //
         verifyException("fi.vtt.noen.testgen.observations.formatter.NoenFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      NoenFormatter noenFormatter0 = new NoenFormatter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        noenFormatter0.header();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error while writing to file named 'UNKNOWN-USING GIVEN STREAM'):Pipe not connected
         //
         verifyException("fi.vtt.noen.testgen.observations.formatter.BasicFormatter$OutputBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter((OutputStream) null);
      // Undeclared exception!
      try { 
        noenFormatter0.header();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fi.vtt.noen.testgen.observations.formatter.BasicFormatter$OutputBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      NoenFormatter noenFormatter0 = new NoenFormatter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        noenFormatter0.footer();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error while writing to file named 'UNKNOWN-USING GIVEN STREAM'):Pipe not connected
         //
         verifyException("fi.vtt.noen.testgen.observations.formatter.BasicFormatter$OutputBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("QD^/,Q!nS.xml");
      FileSystemHandling.createFolder(evoSuiteFile0);
      NoenFormatter noenFormatter0 = null;
      try {
        noenFormatter0 = new NoenFormatter("QD^/,Q!nS");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter("}rt&.>=<sC4_");
      ProgramRun programRun0 = new ProgramRun((String) null);
      Event event0 = new Event((String) null);
      programRun0.add(event0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) "}rt&.>=<sC4_");
      event0.addAttribute("", (Collection) linkedList0);
      noenFormatter0.observations(programRun0);
      assertEquals("xml", noenFormatter0.fileNameExtension());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter("~8[P4JY$w}4lX");
      ProgramRun programRun0 = new ProgramRun("~8[P4JY$w}4lX");
      Event event0 = new Event("~8[P4JY$w}4lX");
      event0.addAttribute("~8[P4JY$w}4lX", (Object) noenFormatter0);
      programRun0.add(event0);
      noenFormatter0.observations(programRun0);
      assertEquals("xml", noenFormatter0.fileNameExtension());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter("}rt&.>=<sC4_");
      ProgramRun programRun0 = new ProgramRun((String) null);
      Event event0 = new Event((String) null);
      programRun0.add(event0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      event0.addAttribute("", (Collection) linkedList0);
      noenFormatter0.observations(programRun0);
      assertEquals("xml", noenFormatter0.fileNameExtension());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter("AJ{3qN2$j]");
      ProgramRun programRun0 = new ProgramRun("AJ{3qN2$j]");
      Event event0 = new Event("AJ{3qN2$j]", true);
      programRun0.add(event0);
      noenFormatter0.observations(programRun0);
      assertEquals("xml", noenFormatter0.fileNameExtension());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter((OutputStream) null);
      // Undeclared exception!
      try { 
        noenFormatter0.footer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fi.vtt.noen.testgen.observations.formatter.BasicFormatter$OutputBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter("");
      noenFormatter0.footer();
      assertEquals("xml", noenFormatter0.fileNameExtension());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NoenFormatter noenFormatter0 = new NoenFormatter("2X/K");
      noenFormatter0.header();
      assertEquals("xml", noenFormatter0.fileNameExtension());
  }
}
